<!DOCTYPE html>
<html>
<head>
    <title>Map</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        #map {
            height: 100vh;
            width: 100%;
        }

        .black-dot {
            width: 15px;
            height: 15px;
            background-color: rgb(255, 0, 0);
            border-radius: 50%;
            border: 3px solid rgb(255, 0, 174);
        }

        .back-button {
            position: fixed;
            bottom: 20px;
            left: 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            cursor: pointer;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            transition: background-color 0.3s ease, transform 0.3s ease;
            opacity: 1; /* Ensure button is fully opaque */
        }

        .back-button:hover {
            background-color: #0056b3;
            transform: scale(1.1); /* Slightly enlarge the button on hover */
            opacity: 1; /* Ensure button remains fully opaque on hover */
        }
    </style>
</head>
<body>
    <div id="map"></div>
    <button class="back-button" onclick="goBack()">←</button>

    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        function goBack() {
            window.history.back();
        }

        const map = L.map('map').setView([51.505, -0.09], 2);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '© OpenStreetMap'
        }).addTo(map);

        const route = <%- JSON.stringify(route) %>;
        const stops = <%- JSON.stringify(stops) %>;
        const livePosition = <%- JSON.stringify(livePosition) %>;

        // Plot route
        const latlngs = route.map(point => [parseFloat(point.lat), parseFloat(point.lon)]);
        const polyline = L.polyline(latlngs, {color: 'blue'}).addTo(map);
        map.fitBounds(polyline.getBounds());

        // Plot stops
        stops.forEach(stop => {
            const marker = L.marker([stop.stopLat, stop.stopLon]).addTo(map);
            marker.bindPopup(`<b>${stop.stopName}</b><br>Platform: ${stop.platform}`).openPopup();
        });

        // Plot live position of the bus
        if (livePosition && livePosition.length === 2) {
            const [lon, lat] = livePosition;
            const blackDotIcon = L.divIcon({
                className: 'black-dot'
            });

            const busMarker = L.marker([lat, lon], {icon: blackDotIcon}).addTo(map);
            map.setView([lat, lon], 15); // Zoom into the bus location
        }
    </script>
</body>
</html>
