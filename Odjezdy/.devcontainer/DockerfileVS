
ARG BUILD_FROM=mcr.microsoft.com/devcontainers/base:debian
FROM $BUILD_FROM

ENV \
    DEBIAN_FRONTEND=noninteractive \
    DEVCONTAINER=1

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

COPY .devcontainer/common/rootfs /
COPY .devcontainer/common/rootfs_supervisor /
COPY .devcontainer/common/install /tmp/common/install
COPY .devcontainer/rootfs /

# Create a directory for the app
WORKDIR /usr/src/app

# Copy the application files
COPY public ./public
COPY views ./views
COPY package.json ./package.json
COPY app.js ./app.js
COPY run.sh /app/run.sh

# Update the package list and install tzdata
RUN apt-get update \
    && apt-get install -y tzdata \
    && ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime \
    && dpkg-reconfigure --frontend noninteractive tzdata
# Set the environment variable for the time zone
ENV TZ=Europe/Berlin

# Install Node.js and npm
RUN apt-get install -y nodejs npm

# Clean up to reduce image size
RUN apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN npm install

# Install common
RUN \
    bash devcontainer_init \
    && common_install_packages \
        docker \
        shellcheck \
        cosign \
        os-agent \
    && usermod -aG docker vscode

# Make the script executable
RUN chmod a+x /app/run.sh

EXPOSE 8001

LABEL io.hass.version="VERSION" io.hass.type="addon" io.hass.arch="armhf|aarch64|i386|amd64"

# Run the application
ENTRYPOINT ["/app/run.sh"]
